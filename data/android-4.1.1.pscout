Permission:GENERAL
104 Callers:
<android.net.wifi.WifiManager: android.net.wifi.WifiInfo getConnectionInfo()> (0)
<android.net.wifi.WifiManager: boolean startScan()> (0)
<android.content.Context: void setWallpaper(android.graphics.Bitmap)> (0)
<android.provider.Settings$System: boolean putInt(android.content.ContentResolver, java.lang.String, int)> (0)
<android.provider.Browser: android.database.Cursor getAllBookmarks(android.content.ContentResolver)> (0)
<android.media.MediaRecorder: void setAudioSource(int)> (0)
<java.net.URLConnection: java.io.InputStream getInputStream()> (0)
<android.telephony.TelephonyManager: java.lang.String getSubscriberId()> (0)
<android.telephony.gsm.SmsManager: void sendTextMessage(java.lang.String, java.lang.String, java.lang.String, android.app.PendingIntent, android.app.PendingIntent)> (0)
<android.net.wifi.WifiManager$WifiLock: void release()> (0)
<android.telephony.TelephonyManager: java.lang.String getDeviceId()> (0)
<android.app.KeyguardManager$KeyguardLock: void reenableKeyguard()> (0)
<android.net.wifi.WifiManager: boolean removeNetwork(int)> (0)
<java.net.URL: java.lang.Object getContent()> (0)
<android.provider.Browser: void clearHistory(android.content.ContentResolver)> (0)
<android.bluetooth.BluetoothAdapter: boolean disable()> (0)
<android.net.ConnectivityManager: int startUsingNetworkFeature(int, java.lang.String)> (0)
<android.net.ConnectivityManager: android.net.NetworkInfo getNetworkInfo(int)> (0)
<android.app.WallpaperManager: void setResource(int)> (0)
<android.widget.VideoView: void stopPlayback()> (0)
<android.telephony.gsm.SmsManager: void sendMultipartTextMessage(java.lang.String, java.lang.String, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList)> (0)
<android.content.ContentResolver: boolean getMasterSyncAutomatically()> (0)
<android.telephony.gsm.SmsManager: void sendDataMessage(java.lang.String, java.lang.String, short, byte[], android.app.PendingIntent, android.app.PendingIntent)> (0)
<android.app.WallpaperManager: void setBitmap(android.graphics.Bitmap)> (0)
<android.bluetooth.BluetoothAdapter: boolean isEnabled()> (0)
<android.widget.VideoView: void pause()> (0)
<android.app.ActivityManager: void killBackgroundProcesses(java.lang.String)> (0)
<android.app.KeyguardManager$KeyguardLock: void disableKeyguard()> (0)
<android.telephony.TelephonyManager: void listen(android.telephony.PhoneStateListener, int)> (0)
<android.location.LocationManager: java.lang.String getBestProvider(android.location.Criteria, boolean)> (0)
<android.app.ActivityManager: java.util.List getRunningTasks(int)> (0)
<java.net.URL: java.io.InputStream openStream()> (0)
<android.net.wifi.WifiManager: boolean reconnect()> (0)
<android.media.RingtoneManager: android.media.Ringtone getRingtone(android.content.Context, android.net.Uri)> (0)
<android.os.Vibrator: void cancel()> (0)
<android.os.PowerManager$WakeLock: void acquire(long)> (0)
<android.telephony.TelephonyManager: android.telephony.CellLocation getCellLocation()> (0)
<android.app.ActivityManager: void restartPackage(java.lang.String)> (0)
<android.net.wifi.WifiManager: int addNetwork(android.net.wifi.WifiConfiguration)> (0)
<android.telephony.TelephonyManager: java.lang.String getVoiceMailNumber()> (0)
<android.content.Context: void setWallpaper(java.io.InputStream)> (0)
<android.location.LocationManager: void setTestProviderEnabled(java.lang.String, boolean)> (0)
<android.telephony.TelephonyManager: java.lang.String getLine1Number()> (0)
<android.location.LocationManager: void setTestProviderLocation(java.lang.String, android.location.Location)> (0)
<android.location.LocationManager: void requestLocationUpdates(java.lang.String, long, float, android.app.PendingIntent)> (0)
<android.net.ConnectivityManager: android.net.NetworkInfo getActiveNetworkInfo()> (0)
<android.accounts.AccountManager: android.accounts.Account[] getAccounts()> (0)
<org.apache.http.impl.client.DefaultHttpClient: org.apache.http.HttpResponse execute(org.apache.http.client.methods.HttpUriRequest)> (0)
<android.bluetooth.BluetoothAdapter: int getScanMode()> (0)
<android.location.LocationManager: void addTestProvider(java.lang.String, boolean, boolean, boolean, boolean, boolean, boolean, boolean, int, int)> (0)
<android.net.wifi.WifiManager: boolean enableNetwork(int, boolean)> (0)
<android.telephony.TelephonyManager: java.lang.String getSimSerialNumber()> (0)
<android.inputmethodservice.KeyboardView: void setKeyboard(android.inputmethodservice.Keyboard)> (0)
<android.net.wifi.WifiManager: boolean disableNetwork(int)> (0)
<android.net.wifi.WifiManager: boolean saveConfiguration()> (0)
<android.net.ConnectivityManager: int stopUsingNetworkFeature(int, java.lang.String)> (0)
<android.net.wifi.WifiManager$WifiLock: void acquire()> (0)
<android.location.LocationManager: boolean isProviderEnabled(java.lang.String)> (0)
<android.hardware.Camera: android.hardware.Camera open()> (0)
<android.provider.Settings$System: boolean putString(android.content.ContentResolver, java.lang.String, java.lang.String)> (0)
<android.media.RingtoneManager: void setActualDefaultRingtoneUri(android.content.Context, int, android.net.Uri)> (0)
<android.telephony.SmsManager: void sendMultipartTextMessage(java.lang.String, java.lang.String, java.util.ArrayList, java.util.ArrayList, java.util.ArrayList)> (0)
<android.os.PowerManager$WakeLock: void release()> (0)
<java.net.HttpURLConnection: void connect()> (0)
<android.media.Ringtone: void setStreamType(int)> (0)
<android.location.LocationManager: java.util.List getProviders(boolean)> (0)
<android.net.wifi.WifiManager: boolean setWifiEnabled(boolean)> (0)
<android.nfc.NfcAdapter: void enableForegroundDispatch(android.app.Activity, android.app.PendingIntent, android.content.IntentFilter[], java.lang.String[][])> (0)
<android.media.MediaRecorder: void setVideoSource(int)> (0)
<android.media.MediaPlayer: void start()> (0)
<android.media.MediaPlayer: void pause()> (0)
<android.telephony.SmsManager: void sendTextMessage(java.lang.String, java.lang.String, java.lang.String, android.app.PendingIntent, android.app.PendingIntent)> (0)
<android.bluetooth.BluetoothAdapter: int getState()> (0)
<android.media.MediaPlayer: void release()> (0)
<android.os.PowerManager$WakeLock: void acquire()> (0)
<android.widget.VideoView: void setVideoPath(java.lang.String)> (0)
<android.provider.Settings$Secure: boolean putString(android.content.ContentResolver, java.lang.String, java.lang.String)> (0)
<android.widget.VideoView: void setVideoURI(android.net.Uri)> (0)
<android.media.MediaPlayer: void stop()> (0)
<android.app.NotificationManager: void notify(int, android.app.Notification)> (0)
<android.net.wifi.WifiManager: java.util.List getConfiguredNetworks()> (0)
<android.location.LocationManager: android.location.LocationProvider getProvider(java.lang.String)> (0)
<android.location.LocationManager: boolean addGpsStatusListener(android.location.GpsStatus$Listener)> (0)
<android.telephony.TelephonyManager: java.util.List getNeighboringCellInfo()> (0)
<android.media.MediaPlayer: void reset()> (0)
<android.net.wifi.WifiManager: boolean isWifiEnabled()> (0)
<android.accounts.AccountManager: android.accounts.Account[] getAccountsByType(java.lang.String)> (0)
<java.net.URLConnection: void connect()> (0)
<android.provider.Browser: android.database.Cursor getAllVisitedUrls(android.content.ContentResolver)> (0)
<android.net.wifi.WifiManager: java.util.List getScanResults()> (0)
<android.widget.VideoView: void start()> (0)
<android.telephony.TelephonyManager: java.lang.String getDeviceSoftwareVersion()> (0)
<android.location.LocationManager: void requestLocationUpdates(java.lang.String, long, float, android.location.LocationListener, android.os.Looper)> (0)
<android.os.Vibrator: void vibrate(long[], int)> (0)
<android.net.ConnectivityManager: android.net.NetworkInfo[] getAllNetworkInfo()> (0)
<android.provider.Browser: void clearSearches(android.content.ContentResolver)> (0)
<android.net.wifi.WifiManager: android.net.DhcpInfo getDhcpInfo()> (0)
<android.net.wifi.WifiManager: int getWifiState()> (0)
<android.location.LocationManager: android.location.Location getLastKnownLocation(java.lang.String)> (0)
<android.location.LocationManager: void requestLocationUpdates(java.lang.String, long, float, android.location.LocationListener)> (0)
<android.nfc.NfcAdapter: void disableForegroundDispatch(android.app.Activity)> (0)
<android.media.Ringtone: void play()> (0)
<java.net.URL: java.net.URLConnection openConnection()> (0)
<android.os.Vibrator: void vibrate(long)> (0)